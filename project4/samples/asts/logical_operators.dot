digraph AST {
root[shape=box,label="program_"];
node_1[shape=box,label="classes_"];
node_2[shape=record,label=""];
node_1 -> node_2 [taillabel="elements_"];
root -> node_1 [taillabel="classes_"];
node_3[shape=box,label="block_"];
node_4[shape=record,label="<e_0>0|<e_1>1|<e_2>2|<e_3>3"];
node_5[shape=box,label="assign_"];
node_6[shape=box,label="ident_"];
node_7[shape=plaintext,label="s"];
node_6 -> node_7 [taillabel="text_"];
node_5 -> node_6 [taillabel="loc_"];
node_8[shape=box,label="strconst_"];
node_9[shape=plaintext,label="cool beans"];
node_8 -> node_9 [taillabel="text_"];
node_5 -> node_8 [taillabel="r_expr_"];
node_4:e_0 -> node_5;
node_10[shape=box,label="assign_"];
node_11[shape=box,label="ident_"];
node_12[shape=plaintext,label="x"];
node_11 -> node_12 [taillabel="text_"];
node_10 -> node_11 [taillabel="loc_"];
node_13[shape=box,label="load_"];
node_14[shape=box,label="ident_"];
node_15[shape=plaintext,label="false"];
node_14 -> node_15 [taillabel="text_"];
node_13 -> node_14 [taillabel="loc_"];
node_10 -> node_13 [taillabel="r_expr_"];
node_4:e_1 -> node_10;
node_16[shape=box,label="assign_"];
node_17[shape=box,label="ident_"];
node_18[shape=plaintext,label="y"];
node_17 -> node_18 [taillabel="text_"];
node_16 -> node_17 [taillabel="loc_"];
node_19[shape=box,label="load_"];
node_20[shape=box,label="ident_"];
node_21[shape=plaintext,label="true"];
node_20 -> node_21 [taillabel="text_"];
node_19 -> node_20 [taillabel="loc_"];
node_16 -> node_19 [taillabel="r_expr_"];
node_4:e_2 -> node_16;
node_22[shape=box,label="if_"];
node_23[shape=box,label="call_"];
node_24[shape=box,label="load_"];
node_25[shape=box,label="ident_"];
node_26[shape=plaintext,label="x"];
node_25 -> node_26 [taillabel="text_"];
node_24 -> node_25 [taillabel="loc_"];
node_23 -> node_24 [taillabel="l_expr_"];
node_27[shape=box,label="ident_"];
node_28[shape=plaintext,label="AND"];
node_27 -> node_28 [taillabel="text_"];
node_23 -> node_27 [taillabel="method_"];
node_29[shape=box,label="actual_args_"];
node_30[shape=record,label="<e_0>0"];
node_31[shape=box,label="load_"];
node_32[shape=box,label="ident_"];
node_33[shape=plaintext,label="y"];
node_32 -> node_33 [taillabel="text_"];
node_31 -> node_32 [taillabel="loc_"];
node_30:e_0 -> node_31;
node_29 -> node_30 [taillabel="elements_"];
node_23 -> node_29 [taillabel="actual_args_"];
node_22 -> node_23 [taillabel="and_"];
node_34[shape=box,label="block_"];
node_35[shape=record,label="<e_0>0"];
node_36[shape=box,label="assign_"];
node_37[shape=box,label="ident_"];
node_38[shape=plaintext,label="s"];
node_37 -> node_38 [taillabel="text_"];
node_36 -> node_37 [taillabel="loc_"];
node_39[shape=box,label="strconst_"];
node_40[shape=plaintext,label="and"];
node_39 -> node_40 [taillabel="text_"];
node_36 -> node_39 [taillabel="r_expr_"];
node_35:e_0 -> node_36;
node_34 -> node_35 [taillabel="elements_"];
node_22 -> node_34 [taillabel="statements_true_"];
node_41[shape=box,label="block_"];
node_42[shape=record,label="<e_0>0"];
node_43[shape=box,label="if_"];
node_44[shape=box,label="call_"];
node_45[shape=box,label="load_"];
node_46[shape=box,label="ident_"];
node_47[shape=plaintext,label="x"];
node_46 -> node_47 [taillabel="text_"];
node_45 -> node_46 [taillabel="loc_"];
node_44 -> node_45 [taillabel="l_expr_"];
node_48[shape=box,label="ident_"];
node_49[shape=plaintext,label="OR"];
node_48 -> node_49 [taillabel="text_"];
node_44 -> node_48 [taillabel="method_"];
node_50[shape=box,label="actual_args_"];
node_51[shape=record,label="<e_0>0"];
node_52[shape=box,label="load_"];
node_53[shape=box,label="ident_"];
node_54[shape=plaintext,label="y"];
node_53 -> node_54 [taillabel="text_"];
node_52 -> node_53 [taillabel="loc_"];
node_51:e_0 -> node_52;
node_50 -> node_51 [taillabel="elements_"];
node_44 -> node_50 [taillabel="actual_args_"];
node_43 -> node_44 [taillabel="or_"];
node_55[shape=box,label="block_"];
node_56[shape=record,label="<e_0>0"];
node_57[shape=box,label="assign_"];
node_58[shape=box,label="ident_"];
node_59[shape=plaintext,label="s"];
node_58 -> node_59 [taillabel="text_"];
node_57 -> node_58 [taillabel="loc_"];
node_60[shape=box,label="strconst_"];
node_61[shape=plaintext,label="or"];
node_60 -> node_61 [taillabel="text_"];
node_57 -> node_60 [taillabel="r_expr_"];
node_56:e_0 -> node_57;
node_55 -> node_56 [taillabel="elements_"];
node_43 -> node_55 [taillabel="statements_true_"];
node_62[shape=box,label="block_"];
node_63[shape=record,label="<e_0>0"];
node_64[shape=box,label="if_"];
node_65[shape=box,label="not_"];
node_66[shape=box,label="load_"];
node_67[shape=box,label="ident_"];
node_68[shape=plaintext,label="x"];
node_67 -> node_68 [taillabel="text_"];
node_66 -> node_67 [taillabel="loc_"];
node_65 -> node_66 [taillabel="l_expr_"];
node_64 -> node_65 [taillabel="not_"];
node_69[shape=box,label="block_"];
node_70[shape=record,label="<e_0>0"];
node_71[shape=box,label="assign_"];
node_72[shape=box,label="ident_"];
node_73[shape=plaintext,label="s"];
node_72 -> node_73 [taillabel="text_"];
node_71 -> node_72 [taillabel="loc_"];
node_74[shape=box,label="strconst_"];
node_75[shape=plaintext,label="not"];
node_74 -> node_75 [taillabel="text_"];
node_71 -> node_74 [taillabel="r_expr_"];
node_70:e_0 -> node_71;
node_69 -> node_70 [taillabel="elements_"];
node_64 -> node_69 [taillabel="statements_true_"];
node_76[shape=box,label="block_"];
node_77[shape=record,label=""];
node_76 -> node_77 [taillabel="elements_"];
node_64 -> node_76 [taillabel="statements_false_"];
node_63:e_0 -> node_64;
node_62 -> node_63 [taillabel="elements_"];
node_43 -> node_62 [taillabel="statements_false_"];
node_42:e_0 -> node_43;
node_41 -> node_42 [taillabel="elements_"];
node_22 -> node_41 [taillabel="statements_false_"];
node_4:e_3 -> node_22;
node_3 -> node_4 [taillabel="elements_"];
root -> node_3 [taillabel="statements_"];
}
